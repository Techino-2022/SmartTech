# Generated by Django 4.0.3 on 2022-03-20 17:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Body',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.FloatField()),
                ('weight', models.IntegerField()),
                ('display_features', models.TextField()),
                ('display', models.CharField(max_length=64)),
                ('resolution', models.CharField(max_length=32)),
                ('protection', models.CharField(choices=[('Scratch-resistant ceramic glass, oleophobic coating', 'Ceramic Glass + oleophobic'), ('Corning Gorilla Glass 6', 'Gorilla 6'), ('Corning Gorilla Glass 5', 'Gorilla 5'), ('Corning Gorilla Glass 4', 'Gorilla 4'), ('Corning Gorilla Glass 3', 'Gorilla 3'), ('Corning Gorilla Glass 2', 'Gorilla 2'), ('Corning Gorilla Glass 1', 'Gorilla 1'), ('Corning Gorilla Glass Victus+', 'Victus+'), ('Not Specified', 'Unknown')], default='Unknown', max_length=64)),
                ('ip_certificate', models.CharField(blank=True, max_length=16, null=True)),
                ('always_on_display', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nfc', models.CharField(choices=[('Yes', 'Have NFC'), ('No', 'Have not NFC'), ('Unknown', 'not Specified')], default='Yes', max_length=32)),
                ('radio', models.BooleanField(default=True)),
                ('sim_slot', models.CharField(max_length=128)),
                ('infrared', models.CharField(choices=[('Yes', 'Have Infrared'), ('No', 'Have not Infrared'), ('Unknown', 'not Specified')], default='No', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=511)),
                ('date', models.DateField(blank=True, null=True)),
                ('model', models.CharField(default='A', max_length=64)),
                ('price', models.IntegerField()),
                ('back_camera_features', models.TextField(blank=True, null=True)),
                ('front_camera_features', models.TextField(blank=True, null=True)),
                ('image_stabilization', models.CharField(blank=True, max_length=64, null=True)),
                ('back_camera_video_quality', models.CharField(blank=True, max_length=64, null=True)),
                ('front_camera_video_quality', models.CharField(blank=True, max_length=64, null=True)),
                ('pros', models.TextField()),
                ('cons', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Wifi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('w_80211a', models.BooleanField(default=False)),
                ('w_80211b', models.BooleanField(default=False)),
                ('w_80211g', models.BooleanField(default=False)),
                ('w_80211n', models.BooleanField(default=False)),
                ('w_80211ac', models.BooleanField(default=False)),
                ('w_802116e', models.BooleanField(default=False)),
                ('dual_band', models.BooleanField(default=False)),
                ('hotspot', models.BooleanField(default=False)),
                ('wifi_direct', models.BooleanField(default=False)),
                ('network', models.ManyToManyField(related_name='wifi', to='phone.network')),
            ],
        ),
        migrations.CreateModel(
            name='Usb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=32)),
                ('on_to_go', models.BooleanField(default=True)),
                ('phone', models.ManyToManyField(related_name='usb', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.FloatField(default=64)),
                ('technology', models.CharField(max_length=127)),
                ('phone', models.ManyToManyField(related_name='storage', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Sound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jack', models.BooleanField(default=True)),
                ('speaker_quality', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.ManyToManyField(related_name='sound', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('face_id', models.BooleanField(default=False)),
                ('fingerprint', models.BooleanField(default=False)),
                ('fingerprint_type', models.CharField(blank=True, max_length=64, null=True)),
                ('accelerometer', models.BooleanField(default=False)),
                ('gyroscope', models.BooleanField(default=False)),
                ('proximity', models.BooleanField(default=False)),
                ('compass', models.BooleanField(default=False)),
                ('barometer', models.BooleanField(default=False)),
                ('h2o', models.BooleanField(default=False)),
                ('beat_rate', models.BooleanField(default=False)),
                ('temperature', models.BooleanField(default=False)),
                ('laser', models.BooleanField(blank=True, default=False, null=True)),
                ('phone', models.ManyToManyField(related_name='sensor', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_count', models.TextField()),
                ('cpu_chipset', models.TextField()),
                ('gpu_chipset', models.TextField()),
                ('phone', models.ManyToManyField(related_name='platform', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneImgUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
                ('phone', models.ManyToManyField(related_name='image_url', to='phone.phone')),
            ],
        ),
        migrations.AddField(
            model_name='phone',
            name='ram',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='phone', to='phone.ram'),
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os', models.CharField(choices=[('ios', 'IOS'), ('android', 'Android'), ('bada', 'Bada'), ('tizen', 'Tizen'), ('symbian', 'Symbian'), ('blackberry ', 'Blackberry'), ('windows phone', 'Windows')], default='android', max_length=15)),
                ('version', models.CharField(max_length=64)),
                ('interface', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.ManyToManyField(related_name='operating_system', to='phone.phone')),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='phone',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network', to='phone.phone'),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame', models.CharField(blank=True, max_length=32, null=True)),
                ('back_glass', models.CharField(blank=True, max_length=32, null=True)),
                ('front_glass', models.CharField(blank=True, max_length=32, null=True)),
                ('body', models.ManyToManyField(related_name='material', to='phone.body')),
            ],
        ),
        migrations.CreateModel(
            name='Gps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_gps', models.BooleanField(default=False)),
                ('bds', models.BooleanField(default=False)),
                ('galileo', models.BooleanField(default=False)),
                ('glonass', models.BooleanField(default=False)),
                ('qzss', models.BooleanField(default=False)),
                ('dual_gps', models.BooleanField(default=False)),
                ('network', models.ManyToManyField(related_name='gps', to='phone.network')),
            ],
        ),
        migrations.CreateModel(
            name='CellNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_2g_bands', models.TextField(blank=True, null=True)),
                ('c_3g_bands', models.TextField(blank=True, null=True)),
                ('c_4g_bands', models.TextField(blank=True, null=True)),
                ('c_5g_bands', models.TextField(blank=True, null=True)),
                ('network', models.ManyToManyField(related_name='cell_network', to='phone.network')),
            ],
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_front_camera', models.BooleanField(default=False)),
                ('pixel_count', models.IntegerField(blank=True, null=True)),
                ('diaphragm', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pixel_size', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('usage', models.CharField(blank=True, max_length=64, null=True)),
                ('features', models.TextField(blank=True, null=True)),
                ('camera_model', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.ManyToManyField(related_name='camera', to='phone.phone')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('country', models.CharField(max_length=64)),
                ('phone', models.ManyToManyField(related_name='brand', to='phone.phone')),
            ],
        ),
        migrations.AddField(
            model_name='body',
            name='color',
            field=models.ManyToManyField(related_name='body', to='phone.color'),
        ),
        migrations.AddField(
            model_name='body',
            name='phone',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='body', to='phone.phone'),
        ),
        migrations.CreateModel(
            name='Bluetooth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.FloatField(blank=True, null=True)),
                ('a2dp', models.BooleanField(default=False)),
                ('le', models.BooleanField(default=False)),
                ('aptx', models.BooleanField(default=False)),
                ('edr', models.BooleanField(default=False)),
                ('network', models.ManyToManyField(related_name='bluetooth', to='phone.network')),
            ],
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField()),
                ('type_select', models.CharField(choices=[('pol', 'Lithium Polymer'), ('ion', 'Lithium Ion')], default='pol', max_length=20)),
                ('removable', models.BooleanField(default=False)),
                ('wireless_charging', models.CharField(choices=[('Yes', 'Supprot Wireless Charging'), ('No', 'not Supprot Wireless Charging'), ('Unknown', 'not Specified')], default='No', max_length=32)),
                ('features', models.TextField()),
                ('phone', models.ManyToManyField(related_name='battery', to='phone.phone')),
            ],
        ),
    ]
